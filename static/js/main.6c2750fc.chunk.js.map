{"version":3,"sources":["components/social-profile/Profile.module.css","components/statistics/Statistics/Statistics.module.css","components/friend/friendList/FriendList.module.css","components/transaction/TransactionHistory/TransactionHistory.module.css","components/social-profile/default.jpg","components/social-profile/Profile.jsx","components/statistics/Statistics/Statistics.jsx","components/statistics/StatisticsTitle/StatisticsTitle.jsx","components/friend/friendListItem/FriendListItem.jsx","components/friend/friendList/FriendList.jsx","components/transaction/Transactions/Transactions.jsx","components/transaction/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","statsItem","label","quantity","followers","views","likes","defaultProps","defaultImage","getRandomColor","r","Math","floor","random","Statistics","statList","map","stat","item","style","backgroundColor","percentage","id","StatisticsTitle","title","children","statistics","FriendListItem","friends","friend","isOnline","statusOnline","statusOffline","width","FriendList","friendList","Transactions","items","tr","type","amount","currency","TransactionHistory","transactionHistory","head","propTypes","PropTypes","arrayOf","shape","string","isRequired","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c2750fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1_QQH\",\"description\":\"Profile_description__3JPqg\",\"avatar\":\"Profile_avatar__350EE\",\"name\":\"Profile_name__MEejR\",\"tag\":\"Profile_tag__1sfAV\",\"location\":\"Profile_location__20o1k\",\"stats\":\"Profile_stats__QvvQP\",\"statsItem\":\"Profile_statsItem__3PeKJ\",\"label\":\"Profile_label__3EHki\",\"quantity\":\"Profile_quantity__1iyol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1w0Xc\",\"title\":\"Statistics_title__18X-I\",\"statList\":\"Statistics_statList__sq5Pr\",\"item\":\"Statistics_item__3e_Yd\",\"label\":\"Statistics_label__3ZeP_\",\"percentage\":\"Statistics_percentage__99_ar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1puDZ\",\"item\":\"FriendList_item__1yusG\",\"span\":\"FriendList_span__3oxlj\",\"statusOnline\":\"FriendList_statusOnline__13bM8 FriendList_span__3oxlj\",\"statusOffline\":\"FriendList_statusOffline__OT1PR FriendList_span__3oxlj\",\"avatar\":\"FriendList_avatar__3sIiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__385a0\",\"head\":\"TransactionHistory_head__D-dSD\",\"tr\":\"TransactionHistory_tr__3qiNQ\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport defaultImage from './default.jpg';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>@{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        <li className={styles.statsItem}>\r\n          <span className={styles.label}>Followers</span>\r\n          <span className={styles.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={styles.statsItem}>\r\n          <span className={styles.label}>Views</span>\r\n          <span className={styles.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={styles.statsItem}>\r\n          <span className={styles.label}>Likes</span>\r\n          <span className={styles.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.defaultProps = {\r\n  avatar: defaultImage,\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nfunction getRandomColor() {\r\n  const r = function () {\r\n    return Math.floor(Math.random() * 256);\r\n  };\r\n  return 'rgb(' + r() + ',' + r() + ',' + r() + ')';\r\n}\r\n\r\nconst Statistics = ({ stats }) => (\r\n  <ul className={styles.statList}>\r\n    {stats.map(stat => (\r\n      <li\r\n        key={stat.id}\r\n        className={styles.item}\r\n        style={{ backgroundColor: getRandomColor() }}\r\n      >\r\n        <span className={styles.label}>{stat.label}</span>\r\n        <span className={styles.percentage}>{stat.percentage}</span>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../Statistics/Statistics.module.css';\r\n\r\nconst StatisticsTitle = ({ title, children }) => (\r\n  <section className={styles.statistics}>\r\n    {title && <h2 className={styles.title}>{title}</h2>}\r\n    {children}\r\n  </section>\r\n);\r\n\r\nStatisticsTitle.defaultProps = {\r\n  title: '',\r\n  children: [],\r\n};\r\n\r\nStatisticsTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default StatisticsTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../friendList/FriendList.module.css';\r\n\r\nconst FriendListItem = ({ friends }) => (\r\n  <>\r\n    {friends.map(friend => (\r\n      <li className={styles.item} key={friend.id}>\r\n        <span\r\n          className={\r\n            friend.isOnline ? styles.statusOnline : styles.statusOffline\r\n          }\r\n        ></span>\r\n        <img\r\n          className={styles.avatar}\r\n          src={friend.avatar}\r\n          alt=\"friendAvatar\"\r\n          width=\"48\"\r\n        />\r\n        <p className={styles.name}>{friend.name}</p>\r\n      </li>\r\n    ))}\r\n  </>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from '../friendListItem/FriendListItem';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={styles.friendList}>\r\n    <FriendListItem friends={friends} />\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../TransactionHistory/TransactionHistory.module.css';\r\n\r\nconst Transactions = ({ items }) => (\r\n  <>\r\n    {items.map(item => (\r\n      <tr className={styles.tr} key={item.id}>\r\n        <td>{item.type}</td>\r\n        <td>{item.amount}</td>\r\n        <td>{item.currency}</td>\r\n      </tr>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default Transactions;\r\n\r\nTransactions.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Transactions from '../Transactions/Transactions';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.transactionHistory}>\r\n    <thead className={styles.head}>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      <Transactions items={items} />\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default TransactionHistory;\r\n\r\nTransactions.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\nimport Profile from './components/social-profile/Profile';\nimport user from './components/social-profile/user.json';\nimport Statistics from './components/statistics/Statistics/Statistics';\nimport statisticalData from './components/statistics/statistical-data.json';\nimport StatisticsTitle from './components/statistics/StatisticsTitle/StatisticsTitle';\nimport friends from './components/friend/friends.json';\nimport FriendList from './components/friend/friendList/FriendList';\nimport TransactionHistory from './components/transaction/TransactionHistory/TransactionHistory';\nimport transactions from './components/transaction/transactions.json';\n\nconst App = () => {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <StatisticsTitle title=\"Upload stats\">\n        <Statistics stats={statisticalData} />\n      </StatisticsTitle>\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}